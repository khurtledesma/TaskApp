{"version":3,"sources":["components/navlink.jsx","components/navbar.jsx","components/todoForm.jsx","components/todo.jsx","components/todoList.jsx","components/todoApp.jsx","components/contact.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavElement","props","className","activeStyle","color","fontWeight","textDecorationLine","to","label","NavBar","TodoForm","addTodo","useState","id","task","completed","todo","setTodo","onSubmit","e","preventDefault","trim","uuidv4","placeholder","type","name","value","onChange","target","class","ToDo","removeTodo","onClick","Todolist","todos","map","LOCAL_STORAGE_KEY","TodoApp","setTodos","useEffect","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","filter","Contact","method","action","height","App","exact","path","component","Error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1d4cf6c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport '../css/bootstrap.min.css'\r\n\r\nconst NavElement = (props) => {\r\n  var activeStyle = {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textDecorationLine: \"underline\",\r\n  };\r\n\r\n  return (\r\n    <NavLink className=\"nav-link text-light\" activeStyle={activeStyle} to={props.to}>\r\n      {props.label}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default NavElement;\r\n","import React from \"react\";\r\nimport NavElement from \"./navlink.jsx\";\r\nimport '../css/bootstrap.min.css'\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <NavElement className=\"navbar-brand\" to=\"/todo\" label=\"Shopping List\" />\r\n      <NavElement to=\"/contact\" label=\"Contact\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React, { useState } from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport \"../App.css\";\r\nimport '../css/bootstrap.min.css';\r\n\r\nfunction TodoForm({ addTodo }) {\r\n\r\n  const [todo, setTodo] = useState({\r\n    id: \"\",\r\n    task: \"\",\r\n    completed: false\r\n  });\r\n\r\n  function handleTaskInputChange(e) {\r\n    // e.target.value contains new input from onChange\r\n    // event for input elements\r\n    setTodo({ ...todo, task: e.target.value });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault(); // prevents browser refresh\r\n    // trim() gets rid of string whitespace\r\n    if (todo.task.trim()) {\r\n      addTodo({ ...todo, id: uuidv4()});\r\n      setTodo({ ...todo, task: \"\" });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className=\"formInput\" onSubmit={handleSubmit}>\r\n      <input\r\n        placeholder=\"What would you like to add?\"\r\n        className=\"textbox\"\r\n        label=\"Task\"\r\n        type=\"text\"\r\n        name=\"task\"\r\n        value={todo.task}\r\n        onChange={handleTaskInputChange}       \r\n      />\r\n      <button class=\"btn btn-success\" type=\"submit\">Add to list</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TodoForm;","import React from \"react\";\r\nimport '../css/bootstrap.min.css';\r\n\r\nfunction ToDo ({ todo, completed, removeTodo}) {\r\n\r\n    function handlecheckboxClick() {\r\n        completed(todo.id);\r\n    } \r\n\r\n    function handleRemoveClick() {\r\n        removeTodo(todo.id);\r\n    }\r\n\r\n    return (\r\n        <div className=\"mainListItem\">\r\n            {todo.task}\r\n            <button class=\"btn btn-danger\" onClick={handleRemoveClick} type=\"button\">Remove</button>\r\n        </div>\r\n    )\r\n}\r\nexport default ToDo;\r\n","import React from \"react\";\r\nimport Todo from \"./todo\";\r\nimport \"../App.css\";\r\n\r\nfunction Todolist ({ todos, completed, removeTodo }) {\r\n    return (\r\n        <div class=\"mainList\">\r\n            {todos.map(todo => (\r\n                <div>\r\n                    <Todo \r\n                     key={todo.id}\r\n                     todo={todo}\r\n                     completed={completed}\r\n                     removeTodo={removeTodo}/>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todolist;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TodoForm from \"./todoForm\";\r\nimport TodoList from \"./todoList\";\r\nimport \"../App.css\";\r\nimport '../css/bootstrap.min.css'\r\n\r\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\r\n\r\nfunction TodoApp () {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n        if (storageTodos) {\r\n            setTodos(storageTodos);\r\n        }\r\n    }, []);\r\n\r\n    useEffect (() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n\r\n    function addTodo(todo) {\r\n        setTodos ([todo, ...todos]);\r\n    }\r\n\r\n    function completed (id) {\r\n        setTodos(\r\n            todos.map(todo=> {\r\n                if (todo.id ===id) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed\r\n                    };\r\n                }\r\n                return todo;\r\n            })\r\n        );\r\n    }\r\n\r\n    function removeTodo(id) {\r\n        setTodos(todos.filter(todo => todo.id !==id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"mainApp\">\r\n            <h1 class=\"\">Shopping List</h1>\r\n            <p>Add items into your list below</p>\r\n            <TodoForm addTodo={addTodo} />\r\n            <TodoList todos={todos} \r\n            removeTodo={removeTodo}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TodoApp;","import React from \"react\";\r\n\r\nconst Contact = () => {\r\n    return (\r\n    <div class=\"mainApp\">\r\n        <h1>Contact Us!</h1>\r\n        <form method=\"POST\" action=\"https://formspree.io/f/xjvadjzj\">\r\n            <fieldset class=\"form-group\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Name\" name=\"name\"></input>\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n                <input type=\"email\" class=\"form-control\" placeholder=\"Email\"  name=\"email\"></input>\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Enter message here\" name=\"message\" height=\"500px\" id=\"messageInput\"></input>\r\n            </fieldset>\r\n            <button type=\"submit\" class=\"btn btn-block btn-success\"> Send! </button>\r\n        </form>\r\n    </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Contact;","import React from \"react\";\r\nimport { HashRouter, Switch, Redirect, Route } from \"react-router-dom\";\r\nimport NavBar from \"./components/navbar\";\r\nimport TodoApp from \"./components/todoApp\"\r\nimport Contact from \"./components/contact\"\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <HashRouter>\r\n            <NavBar/>\r\n            <Switch>\r\n                <Redirect exact path=\"/\" to=\"/todo\" />\r\n                <Route path=\"/todo\" component={TodoApp} />\r\n                <Route path=\"/contact\" component={Contact} />\r\n                <Route component={Error} />\r\n            </Switch>\r\n        </HashRouter>\r\n    );\r\n  };\r\n  \r\n  export default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}